@model Model.ViewModels.AccountViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<section class="navBarWithNoAd"></section>

<div class="container mt-15 mb-30">


    @if (Model == null)
    {
        <h2>إضافة مستخدم </h2>
    }
    else
    {
        <h2>تعديل البينات</h2>
    }


    @using (Html.BeginForm("Create", "Accounts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.HiddenFor(model => model.CreatedOn)
            @Html.HiddenFor(model => model.ModifiedOn)
            @Html.HiddenFor(model => model.CompanyId)
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("الإسم الأول", htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("الإسم الأخير", htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("المهنه", htmlAttributes: new { @class = "control-label col-md-2 required" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProfessionTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProfessionTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("رقم الهاتف", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("المكان", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    
                    @*@if(Model != null)
                    {
                        <a style="color: #b90202e0" href="http://maps.google.com/?q=@Model.Location" target="_blank" rel="noopener noreferrer"> Location on map</a>
                    }*@
                   
                </div>
            </div>
            <div class="form-group">
                @Html.Label("فيس بوك", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacebookUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacebookUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("تويتر", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TwitterUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TwitterUrl, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("الموقع الكتروني", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">تحميل صورة البطاقة</label>
                <div class="col-md-10">
                    @if (Model == null || Model.CardImage == null)
                    {
                        <input type="file" name="file" id="files" />
                    }
                    else
                    {
                        <input type="file" name="file" id="files" />
                        @*<label for="files" class="btn">@Model.CardImage</label>*@
                        <img for="files" src="~/@Model.CardImage" onerror="this.src = '@HttpRuntime.AppDomainAppVirtualPath/Uploads/Default.jpg'" style="width:250px; height:90px" class="card-200">
                    }

                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">تحميل المزيد من المعلومات</label>
                <div class="col-md-10">
                    <input type="file" name="infoFile" id="files" />
                </div>
            </div>

            <div class="form-group">
                @Html.Label("الحساب موجود", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Status, htmlAttributes: new { @checked = true })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @if (Model == null)
                    {
                        <input type="submit" value="اضافه" class="btn btn-success" />
                    }
                    else
                    {
                        <input type="submit" value="تعديل" class="btn btn-success" />
                    }

                </div>
            </div>
        </div>
    }


</div>
